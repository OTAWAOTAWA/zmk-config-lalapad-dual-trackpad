#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define SYSTEM_LAYER    3
#define MOUSE_R_LAYER   4
#define SCROLL_R_LAYER  5
#define MOUSE_L_LAYER   6
#define SCROLL_L_LAYER  7

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 5>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 8>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        scroll_right_left: behavior_sensor_rotate_mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };

        volume_up_down: behavior_sensor_rotate_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        //        behavior_right_click: behavior_right_click {
        //            compatible = "zmk,behavior-sensor-trigger";
        //            label = "RIGHT_CLICK";
        //            bindings = <&kp BTN_RIGHT>;
        //        };
    };

    //    sensors {
    //        glidepoint: glidepoint@1 {
    //            compatible = "cirque,pinnacle";
    //            status = "okay";
    //            reg = <1>;
    //            spi-max-frequency = <1000000>;
    //            dr-gpios = <&xiao_d 7 (GPIO_ACTIVE_HIGH)>;
    //            trigger-behavior = <&behavior_right_click>;
    //        };
    //    };

    macros {
        login: login {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N &kp T &kp E &kp L &kp JP_AT &kp ENTER>;
            label = "LOGIN";
        };

        mail: mail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp S &kp U &kp T &kp O &kp M &kp U &kp LS(0x87) &kp O &kp O &kp T &kp A &kp W &kp A &kp JP_AT &kp T &kp O &kp M &kp O &kp E &kp G &kp A &kp W &kp A &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "MAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;

            bindings = <
&lt 11 ESCAPE  &kp Q         &kp W            &kp E           &kp R           &kp T        &kp Y          &kp U          &kp I            &kp O       &kp P      &kp JP_ASTERISK
&kp TAB        &kp A         &kp S            &kp D           &kp F           &kp G        &kp H          &kp J          &kp K            &kp L       &kp MINUS  &kp PERCENT
&kp LSHFT      &kp Z         &kp X            &kp C           &kp V           &kp B        &kp N          &lt 5 M        &lt 1 COMMA      &kp PERIOD  &kp UP     &kp QUESTION
&kp LCTRL      &kp LEFT_WIN  &kp LEFT_ALT     &kp SPACE       &lt 1 DELETE    &lt 2 LANG2  &lt 3 LANG1    &kp BACKSPACE  &kp RET          &kp LEFT    &kp DOWN   &kp RIGHT
                             &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp LEFT_ARROW  &kp UP       &allow_pageup  &allow_home    &allow_pagedown  &allow_end
            >;
        };

        MOUSE_R_LAYER {
            display-name = "mouse_r_layer";
            bindings = <
&trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &mkp MB4   &mkp MCLK  &mkp MB5   &trans  &mo 5
&trans  &trans  &trans  &trans    &trans    &trans    &trans  &mkp LCLK  &trans     &mkp RCLK  &trans  &trans
&trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans     &trans     &trans  &mo 5
                &trans  &trans    &trans    &trans    &trans  &trans     &trans     &trans
            >;
        };

        SECONDARY_LAYER {
            display-name = "secondary_layer";
            sensor-bindings = <&scroll_left_right>, <&scroll_left_right>;

            bindings = <
&kp F1  &kp F2  &kp F3           &kp F4          &kp F5    &kp F6        &trans  &kp JP_PLUS      &kp MINUS     &kp N7  &kp N8      &kp N9
&kp F7  &kp F8  &kp F9           &kp F10         &kp F11   &kp F12       &trans  &kp JP_ASTERISK  &kp SLASH     &kp N4  &kp N5      &kp N6
&trans  &login  &mail            &trans          &trans    &trans        &trans  &trans           &kp JP_EQUAL  &kp N1  &kp N2      &kp N3
&trans  &trans  &trans           &trans          &trans    &none         &trans  &trans           &trans        &kp N0  &kp PERIOD  &kp KP_ENTER
                &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp LEFT  &kp UP_ARROW  &trans  &trans           &trans        &trans
            >;
        };

        TERTIARY_LAYER {
            display-name = "tertiary_layer";
            bindings = <
&trans  &kp JP_AT   &kp JP_LBRACE    &kp JP_RBRACE   &kp JP_LPAREN    &kp JP_RPAREN     &kp JP_CARET  &kp EXCLAMATION   &kp JP_PIPE   &kp JP_BACKQUOTE  &trans             &bt BT_SEL 0
&trans  &kp HASH    &kp JP_QUOTE     &kp JP_DQUOTE   &kp JP_LBRACKET  &kp JP_RBRACKET   &kp PERCENT   &kp JP_AMPERSAND  &kp JP_TILDE  &trans            &kp JP_UNDERSCORE  &bt BT_SEL 1
&trans  &kp DOLLAR  &kp JP_COLON     &kp SEMICOLON   &kp LESS_THAN    &kp GREATER_THAN  &kp SLASH     &kp JP_YEN        &trans        &trans            &bt BT_CLR         &bt BT_SEL 2
&trans  &trans      &trans           &trans          &trans           &trans            &none         &trans            &trans        &bt BT_CLR_ALL    &bt BT_SEL 4       &bt BT_SEL 3
                    &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp LEFT         &kp UP_ARROW      &trans        &trans            &trans        &trans
            >;

            sensor-bindings = <&scroll_left_right>, <&scroll_left_right>;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&scroll_down_up>, <&volume_up_down>;

            bindings = <
&trans  &trans  &trans  &trans  &trans       &trans      &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans  &trans  &trans  &bootloader  &sys_reset  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
                &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans
            >;
        };

        SCROLL_R_LAYER {
            display-name = "scroll_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE_L_LAYER {
            display-name = "mouse_l_layer";
            bindings = <
&trans  &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&mo 5   &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &mkp MB5   &mkp MB4   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                   &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SCROLL_L_LAYER {
            display-name = "scroll_l_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        US {
            bindings = <
&lt 11 ESCAPE  &kp Q     &kp W      &kp E      &kp R     &kp T             &kp Y         &kp U     &kp I        &kp O     &kp P      &kp ASTERISK
&kp TAB        &kp A     &kp S      &kp D      &kp F     &kp G             &kp H         &kp J     &kp K        &kp L     &kp MINUS  &kp PERCENT
&kp LSHFT      &kp Z     &kp X      &kp C      &kp V     &kp B             &kp N         &lt 5 M   &lt 1 COMMA  &kp DOT   &kp UP     &kp QUESTION
&kp LCTRL      &kp LGUI  &kp LALT   &kp SPACE  &kp DEL   &lt 9 LANGUAGE_2  &lt 10 LANG1  &kp BSPC  &kp RET      &kp LEFT  &kp DOWN   &kp RIGHT
                         &kp RIGHT  &kp DOWN   &kp LEFT  &kp UP            &trans        &trans    &trans       &trans
            >;

            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
        };

        US_FN_NUM {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &trans  &kp PLUS   &kp MINUS  &kp N7  &kp N8   &kp N9
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &kp ASTRK  &kp FSLH   &kp N4  &kp N5   &kp N6
&trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans     &kp EQUAL  &kp N1  &kp N2   &kp N3
&trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans     &trans     &kp N0  &kp DOT  &kp RET
                &trans  &trans   &trans   &trans   &trans  &trans     &trans     &trans
            >;
        };

        US_KIGOU {
            bindings = <
&trans  &kp AT_SIGN  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET    &kp EXCL              &kp PIPE   &kp GRAVE       &trans          &bt BT_SEL 0
&trans  &kp HASH     &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT  &kp AMPERSAND         &kp TILDE  &trans          &kp UNDERSCORE  &bt BT_SEL 1
&trans  &kp DOLLAR   &kp COLON         &kp SEMICOLON      &kp LESS_THAN         &kp GREATER_THAN       &kp SLASH    &kp NON_US_BACKSLASH  &trans     &trans          &bt BT_CLR      &bt BT_SEL 2
&trans  &trans       &trans            &trans             &trans                &trans                 &trans       &trans                &trans     &bt BT_CLR_ALL  &bt BT_SEL 4    &bt BT_SEL 3
                     &trans            &trans             &trans                &trans                 &trans       &trans                &trans     &trans
            >;
        };

        US_JIS {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &tog 8  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
